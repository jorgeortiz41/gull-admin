{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorti\\\\OneDrive\\\\Desktop\\\\REU\\\\gull-admin\\\\react\\\\src\\\\app\\\\views\\\\extra-kits\\\\ImageCropper\\\\ImageCropper.js\";\nimport React, { useState, useCallback } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"./cropImage\";\nimport { Button } from \"react-bootstrap\";\n\nconst ImageCropper = ({\n  image,\n  croppedImg,\n  setCroppedImg,\n  againCrop,\n  setAgainCrop,\n  handleFileSelect\n}) => {\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [rotation, setRotation] = useState(0);\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(image, croppedAreaPixels, rotation);\n\n      if (croppedImage) {\n        const convertDataUrl = croppedImage.toDataURL(\"image/jpeg\");\n        setCroppedImg(convertDataUrl);\n        setAgainCrop(true); // const convertFileUrl = dataURLtoFile(convertDataUrl, \"cropped-image.jpeg\")\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, againCrop ? /*#__PURE__*/React.createElement(\"img\", {\n    className: \"img-fluid\",\n    src: croppedImg,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cropContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Cropper, {\n    image: image,\n    crop: crop,\n    rotation: rotation,\n    zoom: zoom,\n    aspect: 4 / 4,\n    onCropChange: setCrop,\n    onRotationChange: setRotation,\n    onCropComplete: onCropComplete,\n    onZoomChange: setZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row pt-3 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"me-3 fs-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"ZOOM \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: zoom,\n    type: \"range\",\n    class: \"form-range\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => setZoom(e.target.value),\n    max: \"10\",\n    step: \"0.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"me-3 fs-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"ROTATION \"), /*#__PURE__*/React.createElement(\"input\", {\n    value: rotation,\n    type: \"range\",\n    class: \"form-range\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => setRotation(e.target.value),\n    min: \"0\",\n    max: \"360\",\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center pt-3 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"upload-single-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-rounded me-3\",\n    as: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"i-Share-on-Cloud\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Single File\")))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"d-none\",\n    onChange: e => handleFileSelect(e),\n    id: \"upload-single-file\",\n    type: \"file\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => againCrop ? setAgainCrop(false) : showCroppedImage(),\n    className: \"btn btn-rounded btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, againCrop ? \"Crop Again\" : \"Crop And Save\")));\n};\n\nexport default ImageCropper;","map":{"version":3,"sources":["C:/Users/jorti/OneDrive/Desktop/REU/gull-admin/react/src/app/views/extra-kits/ImageCropper/ImageCropper.js"],"names":["React","useState","useCallback","Cropper","getCroppedImg","Button","ImageCropper","image","croppedImg","setCroppedImg","againCrop","setAgainCrop","handleFileSelect","crop","setCrop","x","y","rotation","setRotation","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","showCroppedImage","croppedImage","convertDataUrl","toDataURL","e","console","error","width","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Cropper from \"react-easy-crop\";\nimport getCroppedImg from \"./cropImage\";\nimport { Button } from \"react-bootstrap\";\n\nconst ImageCropper = ({\n  image,\n  croppedImg,\n  setCroppedImg,\n  againCrop,\n  setAgainCrop,\n  handleFileSelect,\n}) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [rotation, setRotation] = useState(0);\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  const showCroppedImage = useCallback(async () => {\n    try {\n      const croppedImage = await getCroppedImg(\n        image,\n        croppedAreaPixels,\n        rotation\n      );\n      if (croppedImage) {\n        const convertDataUrl = croppedImage.toDataURL(\"image/jpeg\");\n        setCroppedImg(convertDataUrl);\n        setAgainCrop(true);\n        // const convertFileUrl = dataURLtoFile(convertDataUrl, \"cropped-image.jpeg\")\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [croppedAreaPixels, rotation]);\n\n  return (\n    <div>\n      <div>\n        {againCrop ? (\n          <img className=\"img-fluid\" src={croppedImg} alt=\"\" />\n        ) : (\n          <div>\n            <div className=\"cropContainer\">\n              <Cropper\n                image={image}\n                crop={crop}\n                rotation={rotation}\n                zoom={zoom}\n                aspect={4 / 4}\n                onCropChange={setCrop}\n                onRotationChange={setRotation}\n                onCropComplete={onCropComplete}\n                onZoomChange={setZoom}\n              />\n            </div>\n            <div className=\"row pt-3 mt-3\">\n              <div className=\"d-flex align-items-center col-6\">\n                <span className=\"me-3 fs-4\">ZOOM </span>\n                <input\n                  value={zoom}\n                  type=\"range\"\n                  class=\"form-range\"\n                  style={{ width: \"100%\" }}\n                  onChange={(e) => setZoom(e.target.value)}\n                  max=\"10\"\n                  step=\"0.1\"\n                />\n              </div>\n              <div className=\"d-flex align-items-center col-6\">\n                <span className=\"me-3 fs-4\">ROTATION </span>\n                <input\n                  value={rotation}\n                  type=\"range\"\n                  class=\"form-range\"\n                  style={{ width: \"100%\" }}\n                  onChange={(e) => setRotation(e.target.value)}\n                  min=\"0\"\n                  max=\"360\"\n                  step=\"1\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"d-flex align-items-center pt-3 mb-5\">\n        <div>\n          <label htmlFor=\"upload-single-file\">\n            <Button className=\"btn-rounded me-3\" as=\"span\">\n              <div className=\"flex flex-middle\">\n                <i className=\"i-Share-on-Cloud\"> </i>\n                <span>Single File</span>\n              </div>\n            </Button>\n          </label>\n          <input\n            className=\"d-none\"\n            onChange={(e) => handleFileSelect(e)}\n            id=\"upload-single-file\"\n            type=\"file\"\n            accept=\"image/*\"\n          />\n        </div>\n        <button\n          onClick={() => (againCrop ? setAgainCrop(false) : showCroppedImage())}\n          className=\"btn btn-rounded btn-primary\"\n        >\n          {againCrop ? \"Crop Again\" : \"Crop And Save\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCropper;\n"]},"metadata":{},"sourceType":"module"}